{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import sklearn.model_selection\n",
    "import sklearn.linear_model\n",
    "\n",
    "np.random.seed(0)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"https://i.stack.imgur.com/T7wwy.png\" width=700>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Part 1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 1. Constructing confidence intervals via central limit theorem"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Paper: https://www-nature-com.proxy1.lib.uwo.ca/articles/s41380-019-0496-z\n",
    "# Article: https://www.scientificamerican.com/article/a-blood-test-might-one-day-mass-screen-military-personnel-for-ptsd/\n",
    "\n",
    "# Let's construct CIs on the test error of the results from this article/paper above. Here we have 42 correct predictions\n",
    "# out of 52 total predictions in our test set. This is put into a csv file called tpr.csv (stands for \"test predictions\").\n",
    "\n",
    "tdf = pd.read_csv(\"tpr.csv\")\n",
    "#display(tdf)\n",
    "\n",
    "# The test claims to be 81% effective. How confident can we be in these test results? We'll now construct CIs."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.6995259303231, 0.9158586850615155]\n"
     ]
    }
   ],
   "source": [
    "# Using Central Limit Theorem (CLT), compute Confidence Intervals (CI) (use ddof=1 to indicate we're using the sample mean)\n",
    "std_err = np.std(tdf.C, ddof=1)/np.sqrt(len(tdf))\n",
    "\n",
    "ci = [tdf.C.mean() - 1.96*std_err, tdf.C.mean() + 1.96 * std_err]\n",
    "print(ci)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2. Constructing confidence intervals via bootstrap"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Let's now compute a CI with 10000 bootstrap samples and get the means, given a sample S (dataframe)\n",
    "\n",
    "def bootstrap(S):\n",
    "    num_iterations = 1000\n",
    "    sample_size = len(S)\n",
    "    \n",
    "    #initialize empty array of bootstrap means\n",
    "    boot_means = np.zeros(1000)\n",
    "    \n",
    "    for i in range(num_iterations):\n",
    "        boot_means[i] = S.sample(sample_size, replace=True).mean()\n",
    "    \n",
    "    return boot_means"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\jacob\\miniconda3\\lib\\site-packages\\seaborn\\distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "  warnings.warn(msg, FutureWarning)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:ylabel='Density'>"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot histogram centered around the sample mean\n",
    "sns.distplot(bootstrap(tdf)-tdf.C.mean())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[-0.11538462  0.09615385]\n"
     ]
    }
   ],
   "source": [
    "# Compute quantiles (i.e. 2.5% and 97.5% quantiles for 95% CI)\n",
    "q = np.quantile(bootstrap(tdf)-tdf.C.mean(), [0.025, 0.975])\n",
    "print(q)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[0.7115384615384616, 0.9230769230769231]\n"
     ]
    }
   ],
   "source": [
    "# Compute confidence interval\n",
    "bci = [tdf.C.mean() - q[1],tdf.C.mean() - q[0]]\n",
    "print(bci)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Part 2\n",
    "\n",
    "# 1. Building a linear model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Data: 1000 North Carolina births. Let's consider weeks (length of the pregnancy) and weight (birth weight in pounds).\n",
    "bdf = pd.read_csv(\"ncb.csv\")\n",
    "#display(bdf)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Important trick: Let's exclude observations with missing week or weight data (NaN values). \n",
    "bdf = bdf.dropna(subset=[\"weeks\",\"weight\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.JointGrid at 0x2368d030bc8>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# What does the joint distribution look like?\n",
    "sns.jointplot(data=bdf, x='weeks', y='weight')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[-5.21866875e+00  1.78832738e-01 -1.85596626e-03]\n"
     ]
    }
   ],
   "source": [
    "# Let's build a linear model (w.r.t. b's.. consider a function form of b0x + b1x^2 + b2x^3) on this data and plot the fit \n",
    "\n",
    "# create sklearn LinearRegression() object\n",
    "reg = sklearn.linear_model.LinearRegression()\n",
    "\n",
    "# create design matrix (i.e. the X matrix)\n",
    "X = np.c_[bdf.weeks, bdf.weeks**2, bdf.weeks**3]\n",
    "\n",
    "# using linear regression, fit the data\n",
    "reg.fit(X, bdf.weight)\n",
    "print(reg.coef_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x2368d246cc8>]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Ok, now that we have a parameter estimate we can plot a curve of best fit to the data (from our linear regression)\n",
    "\n",
    "# generate many x points for a smooth curve fit\n",
    "x_new = np.linspace(min(bdf.weeks), max(bdf.weeks),100)\n",
    "\n",
    "# create design matrix (i.e. the X matrix)\n",
    "X_new = np.c_[x_new, x_new**2, x_new**3]\n",
    "\n",
    "# generate our curve of best fit predictions, given X_new\n",
    "ypr = reg.predict(X_new)\n",
    "\n",
    "# plot the dat and the curve of best fit\n",
    "plt.scatter(bdf.weeks, bdf.weight)\n",
    "plt.plot(x_new, ypr, color=\"red\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. Bootstrap the model parameters"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Let's bootstrap the model parameters b1,b2,b3 with 10000 bootstrap samples, given a sample S (dataframe)\n",
    "def bootstrap_param(S):\n",
    "    num_iterations = 1000\n",
    "    sample_size = len(S)\n",
    "    \n",
    "    #initialize empty array of bootstrap parameter estimates\n",
    "    boot_thetas = np.zeros((1000,3))\n",
    "    \n",
    "    for i in range(num_iterations):\n",
    "        # create bootstrap sample\n",
    "        S_star = S.sample(sample_size, replace=True)\n",
    "        \n",
    "        # create design matrix from bootstrap sample\n",
    "        X = np.c_[S_star.weeks, S_star.weeks**2, S_star.weeks**3]\n",
    "        reg.fit(X,S_star.weight)\n",
    "        boot_thetas[i,:] = reg.coef_ \n",
    "    return boot_thetas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[-4.81552861e+00  1.66390004e-01 -1.73211727e-03]\n",
      " [-4.54708090e+00  1.55138873e-01 -1.59135590e-03]\n",
      " [-5.26741945e+00  1.79189875e-01 -1.84776760e-03]\n",
      " ...\n",
      " [-6.70186679e+00  2.25312805e-01 -2.33102731e-03]\n",
      " [-5.75909675e+00  1.96940596e-01 -2.05045950e-03]\n",
      " [-5.30911348e+00  1.83295222e-01 -1.91545680e-03]]\n"
     ]
    }
   ],
   "source": [
    "# We can call the function and see our bootstrapped sets of parameter estimates\n",
    "boot_thetas = bootstrap_param(bdf)\n",
    "print(boot_thetas)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. Bootstrap the model prediction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Finally, let's bootstrap the model prediction with 10000 bootstrap samples, given a sample S (dataframe) and x values\n",
    "def bootstrap_pred(S):\n",
    "    num_iterations = 1000\n",
    "    sample_size = len(S)\n",
    "\n",
    "    # Let's create our x data using linspace to get a smooth plot for each bootstrap-predicted set of y values\n",
    "    x_new = np.linspace(min(S.weeks),max(S.weeks),100)\n",
    "    X_new = np.c_[x_new,x_new**2,x_new**3]\n",
    "    \n",
    "    # Let's also initialize our ypred to an array of 0's\n",
    "    ypred = np.zeros((1000,X_new.shape[0]))\n",
    "    \n",
    "    for i in range(num_iterations):\n",
    "        #Here we want to store predictions for y from bootstrapped samples. Within the loop, let's get each sample S_star.\n",
    "        S_star = S.sample(num_iterations,replace=True)\n",
    "        \n",
    "        #create design matrix from bootstrapped sample, fit to data\n",
    "        X = np.c_[S_star.weeks, S_star.weeks**2, S_star.weeks**3]\n",
    "        reg.fit(X,S_star.weight)\n",
    "        \n",
    "        #store predictions for y in ypred array\n",
    "        ypred[i,:] = reg.predict(X_new)\n",
    "    return ypred"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plot 20 of the bootstrapped predictions \n",
    "ypr_boot = bootstrap_pred(bdf)\n",
    "\n",
    "for i in range(20):\n",
    "    plt.plot(x_new, ypr_boot[i,:])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x2368d384ec8>]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Finally, let's compute our upper and lower bounds of our confidence interval for the predictions \n",
    "lower = np.quantile(ypr_boot - ypr, 0.025, axis=0) #axis=0 refers to rows\n",
    "upper = np.quantile(ypr_boot - ypr, 0.975, axis=0)\n",
    "\n",
    "#plot prediction\n",
    "plt.plot(x_new, ypr)\n",
    "#plot confidence interval (from bootstrap)\n",
    "plt.plot(x_new, ypr - upper, 'r--')\n",
    "plt.plot(x_new, ypr - lower, 'r--')\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
